
# Server
server.port=8081
spring.application.name=banking-service

# Database
spring.datasource.url=postgresql://neondb_owner:npg_qSz3HeT6afol@ep-weathered-bread-a442xayo-pooler.us-east-1.aws.neon.tech/banking_service-db?sslmode=require
#spring.datasource.username=restaurant_service
#spring.datasource.password=restaurant_service
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# OAuth2 Resource Server Configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8082/auth/realms/food-ordering
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8082/auth/realms/food-ordering/protocol/openid-connect/certs


spring.cache.type=redis
spring.cache.redis.time-to-live=600000